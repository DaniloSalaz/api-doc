schema:
  type: array
  items:
    $ref: '#/components/schemas/Pet'

schema11:
  type: object
  additionalProperties:
    type: integer
    format: int32

schema2:
  $ref: '#/components/schemas/Pet'

schema3:
  type: array
  items:
    type: string
    default: available
    enum:
    - available
    - pending
    - sold

schema4:
  type: array
  items:
    type: string

schema5:
  type: integer
  format: int64

schema6:
  properties:
    name:
      type: string
      description: Updated name of the pet
    status:
      type: string
      description: Updated status of the pet

schema7:
  properties:
    additionalMetadata:
      type: string
      description: Additional data to pass to server
    file:
      type: string
      description: file to upload
      format: binary

schema8:
  type: object
  additionalProperties:
    type: integer
    format: int32


schema9:
  $ref: '#/components/schemas/Pet'

Pet:
  required:
  - name
  - photoUrls
  type: object
  properties:
    id:
      type: integer
      format: int64
    category:
      $ref: '#/components/schemas/Category'
    name:
      type: string
      example: doggie
    photoUrls:
      type: array
      xml:
        name: photoUrl
        wrapped: true
      items:
        type: string
    tags:
      type: array
      xml:
        name: tag
        wrapped: true
      items:
        $ref: '#/components/schemas/Tag'
    status:
      type: string
      description: pet status in the store
      enum:
      - available
      - pending
      - sold
  xml:
    name: Pet

schema10:
  properties:
    additionalMetadata:
      type: string
      description: Additional data to pass to server
    file:
      type: string
      description: file to upload
      format: binary
